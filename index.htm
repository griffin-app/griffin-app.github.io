<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <title>Griffin App by Axway | Open source app for scheduling in-office hours</title>
        <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="styles.min.css" type="text/css">
        <link rel="shortcut icon" href="favicon.ico">
    </head>
    <body>
        <section class="hero">
            <img src="corner-top-right.png" class="corner-top-right" alt="">
            <img src="corner-bottom-left.png" class="corner-bottom-left" alt="">
            <div class="row">
                <div class="col-left">
                    <a href="https://www.axway.com/">
                        <img src="axway-logo.svg" class="axway-logo" alt="Axway logo">
                    </a>
                    <h1 class="hero-title">Help your team return to a <em class="safely">safe</em> workplace.</h1>
                    <div class="hero-text">
                        <p>The Griffin App is an open source mobile app specially designed to help you and your team transition back into the workplace as safely as possible. At Axway, we've used this app to help our own teams return safely â€” now, let us help you!</p>
                        <ul>
                            <li>
                                <strong>Easily schedule in-office hours</strong> &mdash; let employees choose dates they want to come in, and share them on the in-app calendar to coordinate with other team members
                                <img src="icon-calendar.svg" class="hero-icon" role="presentation" alt="">
                                <!-- <svg class="hero-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                    <rect x="4" y="5" width="16" height="16" rx="2" />
                                    <line x1="16" y1="3" x2="16" y2="7" />
                                    <line x1="8" y1="3" x2="8" y2="7" />
                                    <line x1="4" y1="11" x2="20" y2="11" />
                                    <rect x="8" y="15" width="2" height="2" />
                                </svg> -->
                            </li>
                            <li>
                                <strong>Set administrative policies</strong> &mdash; HR can set capacity limits for your offices, open or close offices as needed, and provide executives with a full analytics dashboard
                                <img src="icon-clipboard.svg" class="hero-icon" role="presentation" alt="">
                                <!-- <svg class="hero-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                    <path d="M9 5H7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2V7a2 2 0 0 0 -2 -2h-2" />
                                    <rect x="9" y="3" width="6" height="4" rx="2" />
                                    <path d="M9 14l2 2l4 -4" />
                                </svg> -->
                            </li>
                            <li>
                                <strong>Customize with your branding</strong> &mdash; easily customize colors, logos, and more to match your organization's branding and style guidelines
                                <img src="icon-paint.svg" class="hero-icon" role="presentation" alt="">
                                <!-- <svg class="hero-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                    <path d="M12 21a9 9 0 1 1 0 -18a9 8 0 0 1 9 8a4.5 4 0 0 1 -4.5 4h-2.5a2 2 0 0 0 -1 3.75a1.3 1.3 0 0 1 -1 2.25" />
                                    <circle cx="7.5" cy="10.5" r="1" />
                                    <circle cx="12" cy="7.5" r="1" />
                                    <circle cx="16.5" cy="10.5" r="1" />
                                </svg> -->
                            </li>
                            <li>
                                <strong>iOS and Android support</strong> &mdash; with Titanium, you only code once in JavaScript, then compile into both native iOS and Android applications automatically
                                <img src="icon-mobile.svg" class="hero-icon" role="presentation" alt="">
                                <!-- <svg class="hero-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                    <rect x="7" y="4" width="10" height="16" rx="1" />
                                    <line x1="11" y1="5" x2="13" y2="5" />
                                    <line x1="12" y1="17" x2="12" y2="17.01" />
                                </svg> -->
                            </li>
                            <li>
                                <strong>Powered by AMPLIFY&trade;</strong> &mdash; built using Axway's AMPLIFY platform, so you get access to other powerful integration features without the hassle
                                <img src="icon-amplify.svg" class="hero-icon" role="presentation" alt="">
                                <!-- <svg class="hero-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                    <polyline points="13 3 13 10 19 10 11 21 11 14 5 14 13 3" />
                                </svg> -->
                            </li>
                        </ul>
                        <p>Download the source code from GitHub to get started today!</p>
                    </div>
                    <div class="hero-buttons">
                        <a class="btn" href="https://www.axway.com/griffin-app/opensource?utm_medium=griffin_app&utm_source=github&utm_campaign=gh_opensource_griffin_app">
                            <svg class="cta-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1792 1792">
                                <path d="M1664 896q0 251-146.5 451.5t-378.5 277.5q-27 5-39.5-7t-12.5-30v-211q0-97-52-142 57-6 102.5-18t94-39 81-66.5 53-105 20.5-150.5q0-121-79-206 37-91-8-204-28-9-81 11t-92 44l-38 24q-93-26-192-26t-192 26q-16-11-42.5-27t-83.5-38.5-86-13.5q-44 113-7 204-79 85-79 206 0 85 20.5 150t52.5 105 80.5 67 94 39 102.5 18q-40 36-49 103-21 10-45 15t-57 5-65.5-21.5-55.5-62.5q-19-32-48.5-52t-49.5-24l-20-3q-21 0-29 4.5t-5 11.5 9 14 13 12l7 5q22 10 43.5 38t31.5 51l10 23q13 38 44 61.5t67 30 69.5 7 55.5-3.5l23-4q0 38 .5 89t.5 54q0 18-13 30t-40 7q-232-77-378.5-277.5t-146.5-451.5q0-209 103-385.5t279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"/>
                            </svg>
                            Get it on GitHub
                        </a>
                        <a class="btn btn-secondary" href="https://devblog.axway.com/mobile-apps/the-griffin-app/?utm_source=github&utm_medium=landing%20page&utm_campaign=Griffin%20App%20landing%20page">
                            Learn more
                        </a>
                    </div>
                </div>
                <div class="col-right">
                    <div class="phone-container">
                        <div class="phone">
                        
                            <!-- Phone Top Bar -->
                            <div class="phone-top"></div>
                            <!-- Phone Content -->
                            <div class="preview">
                                <img src="griffin-app-2.png" class="preview-sizer" alt="Preview screenshot 1">
                                <img src="griffin-app-1.png" class="screenshot screenshot-active" alt="Preview screenshot 1">
                                <img src="griffin-app-2.png" class="screenshot screenshot-right" alt="Preview screenshot 2">
                                <img src="griffin-app-3.png" class="screenshot screenshot-right" alt="Preview screenshot 3">
                                <img src="griffin-app-6.png" class="screenshot screenshot-right" alt="Preview screenshot 6">
                                <img src="griffin-app-4.png" class="screenshot screenshot-right" alt="Preview screenshot 4">
                                <img src="griffin-app-5.png" class="screenshot screenshot-right" alt="Preview screenshot 5">
                            </div>
                            <div class="phone-shadow"></div>
                        </div>
                    </div>
                    <div class="dots-container">
                        <button class="btn step-button disabled" id="buttonPrev">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="18" viewBox="0 0 24 18">
                                <line x1="20" y1="10" x2="4" y2="10" />
                                <polyline points="10 16 4 10 10 4" />
                            </svg>
                        </button>
                        <div id="dots">
                            <span class="dot dot-active"></span>
                            <span class="dot"></span>
                            <span class="dot"></span>
                            <span class="dot"></span>
                            <span class="dot"></span>
                            <span class="dot"></span>
                        </div>
                        <button class="btn step-button" id="buttonNext">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="18" viewBox="0 0 24 18">
                                <line x1="4" y1="10" x2="20" y2="10" />
                                <polyline points="14 4 20 10 14 16" />
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
            <script type="text/javascript">
                let screenshots = document.querySelectorAll(".screenshot"),
                    buttonNext = document.getElementById("buttonNext"),
                    buttonPrev = document.getElementById("buttonPrev"),
                    currentDot = 0,
                    stepDotsSection = document.getElementById("dots");

                // Step dots at the bottom
                function createBottomDots() {

                    // Clear the dots section, just in case it ain't already clear
                    stepDotsSection.innerHTML = "";

                    // Add in as many new dots (<span> elements) as there are steps for the current tab
                    for (let i = 0; i < screenshots.length; i++) {
                        let newDot = document.createElement("span");

                        // Give this new span the 'step-dot' class so it shows up properly
                        newDot.setAttribute("class", "dot");

                        // When creating the dots, make the first one active by default
                        if (i == 0) {
                            newDot.classList.add("dot-active");
                        }

                        // Add it to the DOM, aww yeah
                        stepDotsSection.appendChild(newDot);
                    }
                }

                // This is used for updating the dots to have the correct class when a Previous/Next button is clicked
                function updateBottomDots(step) {

                    // Remove the active class from the old, lamer dot
                    for (let i = 0; i < screenshots.length; i++) {
                        stepDotsSection.children[i].classList.remove("dot-active");
                    }

                    // Add the active class to the newer, cooler, current dot
                    stepDotsSection.children[step - 1].classList.add("dot-active");
                }

                // Add the 'disabled' class to the 'Previous' and 'Next' buttons to make them transparent & unclickable
                function disableButton(button) {
                    switch (button) {
                        case "prev":
                            buttonPrev.classList.add("disabled");
                            break;
                        case "next":
                            buttonNext.classList.add("disabled");
                    }
                }

                // Removes the 'disabled' class to the 'Previous' and 'Next' buttons
                function enableButton(button) {
                    switch (button) {
                        case "prev":
                            buttonPrev.classList.remove("disabled");
                            break;
                        case "next":
                            buttonNext.classList.remove("disabled");
                    }
                }

                function checkButtonState() {
                    // Disable the 'Next' button if this tab is already at its final step
                    if (currentDot > screenshots.length - 2) {
                        disableButton("next");
                    } else {
                        enableButton("next");
                    }

                    // Disable the 'Previous' button if this tab is already at its first step
                    if (currentDot <= 0) {
                        disableButton("prev");
                    } else {
                        enableButton("prev");
                    }
                }

                // Previous & Next buttons
                buttonNext.addEventListener("click", function () {
                    if (currentDot < screenshots.length - 1) {

                        // console.log(stepDotsSection.children[currentDot]);

                        // Remove the "dot-active class" from the old dot
                        stepDotsSection.children[currentDot].classList.remove("dot-active");

                        // Remove the "screenshot-active class" from the old screenshot
                        screenshots[currentDot].classList.remove("screenshot-active");

                        // Slide the screenshot off to the left
                        screenshots[currentDot].classList.add("screenshot-left");

                        // Increment to the next preview screenshot
                        currentDot++;

                        // Add the "dot-active class" to the newer, cooler dot
                        stepDotsSection.children[currentDot].classList.add("dot-active");

                        // Add the "screenshot-active class" to the next screenshot
                        screenshots[currentDot].classList.add("screenshot-active");

                        // Slide the screenshot in from the right
                        screenshots[currentDot].classList.remove("screenshot-right");

                        // Checks if the Previous/Next buttons are displayed properly for this new tab (and fixes them if not)
                        checkButtonState();
                    }
                })
                buttonPrev.addEventListener("click", function () {
                    if (currentDot > 0) {

                        // console.log(stepDotsSection.children[currentDot]);

                        // Remove the "dot-active class" from the old dot
                        stepDotsSection.children[currentDot].classList.remove("dot-active");

                        // Remove the "screenshot-active class" from the old screenshot
                        screenshots[currentDot].classList.remove("screenshot-active");

                         // Slide the screenshot off to the right
                        screenshots[currentDot].classList.add("screenshot-right");

                        // Increment to the previous preview screenshot
                        currentDot--;

                        // Add the "dot-active class" to the newer, cooler dot
                        stepDotsSection.children[currentDot].classList.add("dot-active");

                        // Add the "screenshot-active class" to the next screenshot
                        screenshots[currentDot].classList.add("screenshot-active");

                        // Slide the screenshot in from the left
                        screenshots[currentDot].classList.remove("screenshot-left");

                        // Checks if the Previous/Next buttons are displayed properly for this new tab (and fixes them if not)
                        checkButtonState();
                    }
                })

                createBottomDots();
            </script>
        </section>
    </body>
</html>